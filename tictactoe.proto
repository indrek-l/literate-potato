syntax = "proto3";

message StartingPlayerMessage {
    int32 starting_node = 1;
    string symbol = 2;
}
message StartingPlayerResponse {
}

message InitLeaderRequest {
}
message InitLeaderResponse {
}

message ElectionRequest {
    int32 leader_pid = 1;
    repeated int32 candidate_pids = 2;
}
message ElectionResponse {
    int32 leader_pid = 1;
}

message GetNodeTimeRequest {
}
message GetNodeTimeResponse {
    float timestamp = 1;
}

message SetNodeTimeRequest {
    int32 requester_pid = 1;
    int32 target_pid = 2;
    float timestamp = 3;
}
message SetNodeTimeResponse {
    string message = 1;
}

message SetSymbolRequest {
    string symbol = 1;
    int32 position = 2;
    float timestamp = 3;
    int32 sender_node = 4;
}
message SetSymbolResponse {
    bool success = 1;
    string message = 2;
}

message ListBoardRequest {
}
message ListBoardResponse {
    repeated string board = 1;
}

message CheckTimeoutRequest {
}
message CheckTimeoutResponse {
}

message AnnounceWinnerRequest {
    string message = 1;
}
message AnnounceWinnerResponse {
}

service TicTacToe {
    rpc announce_winner (AnnounceWinnerRequest) returns (AnnounceWinnerResponse) {};
    rpc starting_player (StartingPlayerMessage) returns (StartingPlayerResponse) {};
    rpc init_leader (InitLeaderRequest) returns (InitLeaderResponse) {};
    rpc election (ElectionRequest) returns (ElectionResponse) {};
    rpc get_node_time (GetNodeTimeRequest) returns (GetNodeTimeResponse) {};
    rpc set_symbol (SetSymbolRequest) returns (SetSymbolResponse) {};
    rpc list_board (ListBoardRequest) returns (ListBoardResponse) {};
    rpc set_node_time (SetNodeTimeRequest) returns (SetNodeTimeResponse) {};
    rpc check_timeout (CheckTimeoutRequest) returns (CheckTimeoutResponse) {};
}
