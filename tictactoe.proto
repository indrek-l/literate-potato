syntax = "proto3";

message ElectionRequest {
    int32 leader_pid = 1;
    repeated int32 candidate_pids = 3;
}
message ElectionResponse {
    int32 leader_pid = 1;
}

message GetNodeTimeRequest {
}
message GetNodeTimeResponse {
    int64 timestamp = 1;
}

message SetSymbolRequest {
    string symbol = 1;
    int32 position = 2;
}
message SetSymbolResponse {
    bool success = 1;
}

message ListBoardRequest {
}
message ListBoardResponse {
    repeated string board = 1;
}

message SetNodeTimeRequest {
    int32 requester_pid = 1;
    int32 target_pid = 2;
    string timestamp = 3;
}
message SetNodeTimeResponse {
}

message CheckWinnerRequest {

}
message CheckWinnerResponse {

}

message CheckTimeoutRequest {

}
message CheckTimeoutResponse {

}

service TicTacToe {
    rpc election (ElectionRequest) returns (ElectionResponse) {};
    rpc get_node_time (GetNodeTimeRequest) returns (GetNodeTimeResponse) {};
    rpc set_symbol (SetSymbolRequest) returns (SetSymbolResponse) {};
    rpc list_board (ListBoardRequest) returns (ListBoardResponse) {};
    rpc set_node_time (SetNodeTimeRequest) returns (SetNodeTimeResponse) {};
    rpc check_winner (CheckWinnerRequest) returns (CheckWinnerResponse) {};
    rpc check_timeout (CheckTimeoutRequest) returns (CheckTimeoutResponse) {};
}
